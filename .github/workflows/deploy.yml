name: Deploy to OVH Server - losuje.pl

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        npm run build
        
    - name: Security audit frontend
      run: |
        cd frontend
        npm audit --omit=dev
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci --production
        
    - name: Security audit backend
      run: |
        cd backend
        npm audit --omit=dev
        
    - name: Deploy to OVH Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          echo "🚀 Rozpoczynam deployment na OVH..."
          
          # Backup przed aktualizacją
          BACKUP_DIR="/var/www/losuje.pl/backups/$(date +%Y%m%d_%H%M%S)"
          mkdir -p "$BACKUP_DIR"
          
          if [ -d "/var/www/losuje.pl/lotek" ]; then
            echo "📦 Tworzę backup..."
            cp -r /var/www/losuje.pl/lotek "$BACKUP_DIR/"
            echo "✅ Backup utworzony: $BACKUP_DIR"
          fi
          
          # Aktualizacja kodu
          cd /var/www/losuje.pl
          if [ -d "lotek" ]; then
            cd lotek
            git fetch origin
            git reset --hard origin/main
          else
            git clone https://github.com/losujemykontakt-coder/losuje.git lotek
            cd lotek
          fi
          
          # Aktualizacja frontend
          echo "🔨 Buduję frontend..."
          cd frontend
          npm ci
          npm run build
          
          if [ $? -eq 0 ]; then
            echo "✅ Frontend zbudowany pomyślnie!"
          else
            echo "❌ Błąd podczas budowania frontend!"
            exit 1
          fi
          
          # Aktualizacja backend
          echo "🔧 Aktualizuję backend..."
          cd ../backend
          npm ci --production
          
          # Restart aplikacji
          echo "🔄 Restartuję aplikację..."
          pm2 restart lotek-backend
          
          # Sprawdź status
          sleep 5
          if pm2 list | grep -q "lotek-backend.*online"; then
            echo "✅ Aplikacja zaktualizowana i uruchomiona!"
          else
            echo "❌ Błąd podczas uruchamiania aplikacji!"
            pm2 logs lotek-backend --lines 20
            exit 1
          fi
          
          # Czyszczenie starych backupów (zostaw ostatnie 5)
          cd /var/www/losuje.pl/backups
          ls -t | tail -n +6 | xargs -r rm -rf
          
          echo "🎉 Deployment zakończony pomyślnie!"
          
    - name: Health check
      run: |
        sleep 30
        curl -f -I https://losuje.pl || exit 1
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ Deployment zakończony pomyślnie!"
          echo "🌐 Aplikacja dostępna na: https://losuje.pl"
        else
          echo "❌ Deployment nie powiódł się!"
        fi


