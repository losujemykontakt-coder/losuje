#!/bin/bash

echo "üîç Sprawdzam dzia≈Çanie domen losuje.pl i losuje-generator.pl...\n"

# Kolory dla lepszej czytelno≈õci
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Funkcja do sprawdzania domeny
check_domain() {
    local domain=$1
    local description=$2
    
    echo "üåê Sprawdzam $domain ($description)..."
    
    # Sprawd≈∫ HTTP (powinno przekierowaƒá na HTTPS)
    echo "   üì° HTTP -> HTTPS redirect:"
    if curl -s -I "http://$domain" | grep -q "301\|302"; then
        echo -e "   ${GREEN}‚úÖ Przekierowanie HTTP -> HTTPS dzia≈Ça${NC}"
    else
        echo -e "   ${RED}‚ùå Przekierowanie HTTP -> HTTPS nie dzia≈Ça${NC}"
    fi
    
    # Sprawd≈∫ HTTPS
    echo "   üîí HTTPS:"
    if curl -s -I "https://$domain" | grep -q "200\|301\|302"; then
        echo -e "   ${GREEN}‚úÖ HTTPS dzia≈Ça${NC}"
    else
        echo -e "   ${RED}‚ùå HTTPS nie dzia≈Ça${NC}"
    fi
    
    # Sprawd≈∫ SSL certyfikat
    echo "   üîê SSL certyfikat:"
    if echo | openssl s_client -servername $domain -connect $domain:443 2>/dev/null | openssl x509 -noout -dates | grep -q "notAfter"; then
        echo -e "   ${GREEN}‚úÖ SSL certyfikat jest wa≈ºny${NC}"
    else
        echo -e "   ${RED}‚ùå Problem z SSL certyfikatem${NC}"
    fi
    
    echo ""
}

# Sprawd≈∫ obie domeny
check_domain "losuje.pl" "g≈Ç√≥wna aplikacja"
check_domain "losuje-generator.pl" "PWA/TWA aplikacja"

# Sprawd≈∫ backend API
echo "üîß Sprawdzam backend API..."
if curl -s "https://losuje.pl/api/health" | grep -q "ok\|success"; then
    echo -e "${GREEN}‚úÖ Backend API dzia≈Ça${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è Backend API mo≈ºe nie dzia≈Çaƒá (sprawd≈∫ logi)${NC}"
fi

echo ""
echo "üéâ Sprawdzanie domen zako≈Ñczone!"
echo ""
echo "üìã Je≈õli co≈õ nie dzia≈Ça:"
echo "   - Sprawd≈∫ logi nginx: tail -f /var/log/nginx/error.log"
echo "   - Sprawd≈∫ status nginx: systemctl status nginx"
echo "   - Sprawd≈∫ certyfikaty SSL: certbot certificates"
echo "   - Sprawd≈∫ backend: curl http://localhost:3002/health"
