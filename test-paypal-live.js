const axios = require('axios');

async function testPayPalLive() {
  console.log('=== TEST PAYPAL LIVE ===');
  
  try {
    // Test 1: Sprawd≈∫ konfiguracjƒô
    console.log('1Ô∏è‚É£ Sprawdzanie konfiguracji PayPal...');
    const config = require('./backend/config');
    console.log('‚úÖ Environment:', config.PAYPAL.ENVIRONMENT);
    console.log('‚úÖ Client ID:', config.PAYPAL.CLIENT_ID ? 'OK' : 'BRAK');
    console.log('‚úÖ Client Secret:', config.PAYPAL.CLIENT_SECRET ? 'OK' : 'BRAK');
    
    // Test 2: Sprawd≈∫ endpoint konfiguracji
    console.log('\n2Ô∏è‚É£ Test endpointu konfiguracji...');
    const configResponse = await axios.get('http://localhost:3001/api/paypal/config');
    console.log('‚úÖ Konfiguracja z serwera:', configResponse.data);
    
    // Test 3: Test tworzenia zam√≥wienia
    console.log('\n3Ô∏è‚É£ Test tworzenia zam√≥wienia PayPal...');
    const orderResponse = await axios.post('http://localhost:3001/api/paypal/create-order', {
      amount: 9.99,
      currency: 'PLN',
      description: 'Test Plan Premium - LIVE'
    });
    
    console.log('‚úÖ Odpowied≈∫ serwera:', orderResponse.data);
    
    if (orderResponse.data.success) {
      console.log('üéâ PayPal LIVE dzia≈Ça poprawnie!');
      console.log('üìã Order ID:', orderResponse.data.orderId);
      console.log('üîó Approval URL:', orderResponse.data.approvalUrl);
    } else {
      console.log('‚ùå B≈ÇƒÖd:', orderResponse.data.error);
    }
    
  } catch (error) {
    console.error('‚ùå B≈ÇƒÖd testu:', error.message);
    
    if (error.response) {
      console.error('Status:', error.response.status);
      console.error('Data:', error.response.data);
    }
  }
}

testPayPalLive();
